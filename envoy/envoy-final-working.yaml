node:
  id: ingress
  cluster: ingress-cluster

layered_runtime:
  layers:
    - name: static_layer
      static_layer:
        envoy:
          logging:
            level: debug
static_resources:
  listeners:
    - name: listener_0
      address:
        socket_address:
          address: 0.0.0.0
          port_value: 8888
      filter_chains:
        - filters:
            - name: envoy.filters.network.http_connection_manager
              typed_config:
                "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
                stat_prefix: ingress_http
                route_config:
                  name: local_route
                  virtual_hosts:
                    - name: trino_service
                      domains: ["*"]
                      routes:
                        - match:
                            # prefix: "/test"
                            prefix: "/"
                          route:
                            cluster: trino
                            # cluster: test
                http_filters:                  
                  - name: envoy.filters.http.ext_authz
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthz
                      http_service:
                        server_uri:
                          uri: http://auth_service:8081
                          cluster: auth_service
                          timeout: 0.25s
                      #   authorization_request:
                      #     allowed_headers:
                      #       patterns:
                      #         - exact: Authorization                          
                        authorization_response:
                          allowed_upstream_headers:
                            patterns:
                              - exact: x-trino-user                          
                      #       patterns:
                      #         - safe_regex:
                      #             google_re2: {}
                      #             regex: ".*"                          
                      #       # patterns:
                      #       #   - exact: x-trino-user
                          allowed_client_headers:
                            patterns:
                              - exact: x-trino-user                          
                          allowed_client_headers_on_success:
                            patterns:
                              - exact: x-trino-user
                              - exact: X-Trino-User
                              # - safe_regex:
                              #     google_re2: {}
                              #     regex: ".*"
                      # failure_mode_allow: false
                      clear_route_cache: true
                  - name: envoy.filters.http.router
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router

  clusters:
    - name: trino
      connect_timeout: 0.25s
      type: strict_dns
      lb_policy: round_robin
      load_assignment:
        cluster_name: trino
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      address: trino
                      port_value: 8080
    - name: auth_service
      connect_timeout: 0.25s
      type: strict_dns
      lb_policy: round_robin
      load_assignment:
        cluster_name: auth_service
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      address: auth_service
                      port_value: 8081
    - name: test
      connect_timeout: 0.25s
      type: strict_dns
      lb_policy: round_robin
      load_assignment:
        cluster_name: test
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      address: auth_service
                      port_value: 8081

admin:
  access_log_path: "/tmp/admin_access.log"
  address:
    socket_address:
      address: 0.0.0.0
      port_value: 8001
